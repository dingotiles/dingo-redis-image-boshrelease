---
meta:
  name: dingo-redis-image
  target: sw
  url: https://ci.starkandwayne.com
  test-errands: sanity-test
  aws:
    access_key: (( vault "secret/pipelines/" meta.github.repo "/aws:access_key"))
    secret_key: (( vault "secret/pipelines/" meta.github.repo "/aws:secret_key"))
  github:
    owner: dingotiles
    repo: (( concat meta.name "-boshrelease" ))
    access_token: (( vault "secret/pipelines/" meta.github.repo "/github:access_token"))
    private_key:  (( vault "secret/pipelines/" meta.github.repo "/github:private_key"))
  bosh-lite:
    deployment: (( concat meta.name "-testflight" ))
    deployment-shield: (( concat meta.name "-shield" ))
    bosh_environment: (( vault "secret/bosh-lites/lite49" "/env:ip" ))
    bosh_ca_cert: (( vault "secret/bosh-lites/lite49" "/certs:rootCA.pem" ))
    bosh_client: admin
    bosh_client_secret: (( vault "secret/bosh-lites/lite49" "/users/admin:password" ))
    gw_host:        (( vault "secret/bosh-lites/lite49" "/env:ip" ))
    gw_user:        (( vault "secret/bosh-lites" "/ssh:user" ))
    gw_private_key: (( vault "secret/bosh-lites" "/ssh:private" ))
    cf:
      api_url: (( vault "secret/bosh-lites/lite49" "/cf:api_url" ))
      system_domain: (( vault "secret/bosh-lites/lite49" "/cf:system_domain" ))
      username: (( vault "secret/bosh-lites/lite49" "/cf:admin_username" ))
      password: (( vault "secret/bosh-lites/lite49" "/cf:admin_password" ))
      skip_ssl_validation: (( vault "secret/bosh-lites/lite49" "/cf:skip_ssl_validation" ))
  docker_hub:
    email: (( vault "secret/pipelines/" meta.github.repo "/docker_hub:email" ))
    username: (( vault "secret/pipelines/" meta.github.repo "/docker_hub:username" ))
    password: (( vault "secret/pipelines/" meta.github.repo "/docker_hub:password" ))
  docker-machine:
    access_key: (( vault "secret/pipelines/" meta.github.repo "/docker_machine:access_key"))
    secret_key: (( vault "secret/pipelines/" meta.github.repo "/docker_machine:secret_key"))
    region: (( vault "secret/pipelines/" meta.github.repo "/docker_machine:region"))
    bucket: (( vault "secret/pipelines/" meta.github.repo "/docker_machine:bucket"))
    machine_name: delmo-dingo-postgresql-pipeline
  delmo:
    access_key: (( vault "secret/pipelines/" meta.github.repo "/delmo:access_key"))
    secret_key: (( vault "secret/pipelines/" meta.github.repo "/delmo:secret_key"))
    region: (( vault "secret/pipelines/" meta.github.repo "/delmo:region"))
    bucket: (( vault "secret/pipelines/" meta.github.repo "/delmo:bucket"))
  slack:
    channel: Please specify the channel (#name) or user (@user) to send messages to
    webhook: Please specify your Slack Incoming Webhook Integration URL

groups:
  - name: (( grab meta.pipeline ))
    jobs:
      - shield

jobs:
  - name: shield
    public: true
    serial: true
    plan:
    - do:
      - aggregate:
        - { get: git }
        - { get: git-shield }
      - task: deploy-shield
        config:
          platform: linux
          rootfs_uri: (( grab meta.image ))
          inputs:
            - { name: git }
            - { name: git-shield }
          run:
            path: ./git/ci/scripts/deploy-shield
            args: []
          params:
            REPO_ROOT:            git-shield
            BOSH_ENVIRONMENT:     (( grab meta.bosh-lite.bosh_environment ))
            BOSH_CA_CERT:         (( grab meta.bosh-lite.bosh_ca_cert ))
            BOSH_CLIENT:          (( grab meta.bosh-lite.bosh_client ))
            BOSH_CLIENT_SECRET:   (( grab meta.bosh-lite.bosh_client_secret ))
            BOSH_DEPLOYMENT:      (( grab meta.bosh-lite.deployment-shield ))
            BOSH_GW_HOST:         (( grab meta.bosh-lite.gw_host ))
            BOSH_GW_USER:         (( grab meta.bosh-lite.gw_user ))
            BOSH_GW_PRIVATE_KEY:  (( grab meta.bosh-lite.gw_private_key ))

resources:
  - name: git-shield
    type: git
    source:
      uri:         https://github.com/starkandwayne/shield-boshrelease.git
      branch:      links-and-cloud-config
      private_key: (( grab meta.github.private_key ))
